{
  "lesson10": {
    "title": "HTML Advanced",
    "quiz": [
      {"id": 1, "question": "Which HTML tag is used for tables?", "options": ["<div>", "<table>", "<form>", "<ul>"], "correct": "<table>"},
      {"id": 2, "question": "Which tag defines an image?", "options": ["<pic>", "<img>", "<src>", "<image>"], "correct": "<img>"},
      {"id": 3, "question": "Which attribute specifies a link URL?", "options": ["src", "href", "url", "link"], "correct": "href"},
      {"id": 4, "question": "Semantic tag for navigation?", "options": ["<nav>", "<section>", "<aside>", "<main>"], "correct": "<nav>"},
      {"id": 5, "question": "Which input type is for email?", "options": ["text", "mail", "email", "password"], "correct": "email"},
      {"id": 6, "question": "Which tag is used for video?", "options": ["<vid>", "<video>", "<media>", "<play>"], "correct": "<video>"},
      {"id": 7, "question": "HTML5 introduced?", "options": ["<article>", "<section>", "<footer>", "All"], "correct": "All"},
      {"id": 8, "question": "Which tag makes a checkbox?", "options": ["<checkbox>", "<input type='checkbox'>", "<check>", "<box>"], "correct": "<input type='checkbox'>"},
      {"id": 9, "question": "Which tag defines a list item?", "options": ["<li>", "<ol>", "<ul>", "<item>"], "correct": "<li>"},
      {"id": 10, "question": "Which meta tag sets page encoding?", "options": ["<meta charset>", "<meta encode>", "<meta utf>", "<meta type>"], "correct": "<meta charset>"}
    ]
  }
}


{
  "lesson11": {
    "title": "CSS Advanced",
    "quiz": [
      {"id": 1, "question": "Which property changes text color?", "options": ["font-color", "text-color", "color", "background"], "correct": "color"},
      {"id": 2, "question": "Which unit is relative to parent?", "options": ["px", "em", "cm", "in"], "correct": "em"},
      {"id": 3, "question": "CSS Grid property for columns?", "options": ["grid-template-columns", "grid-cols", "flex-cols", "columns"], "correct": "grid-template-columns"},
      {"id": 4, "question": "Which position keeps element fixed?", "options": ["absolute", "fixed", "relative", "sticky"], "correct": "fixed"},
      {"id": 5, "question": "Which pseudo-class is for hover state?", "options": [":focus", ":hover", ":active", ":link"], "correct": ":hover"},
      {"id": 6, "question": "Flexbox direction row?", "options": ["flex-direction: row", "row: flex", "display: row", "align: row"], "correct": "flex-direction: row"},
      {"id": 7, "question": "Which sets background image?", "options": ["background-img", "background-image", "img", "image"], "correct": "background-image"},
      {"id": 8, "question": "CSS variable is declared with?", "options": ["@", "--", "$", "#"], "correct": "--"},
      {"id": 9, "question": "Media queries used for?", "options": ["Animations", "Responsive design", "Colors", "Grids"], "correct": "Responsive design"},
      {"id": 10, "question": "Which property adds shadow?", "options": ["text-shadow", "box-shadow", "shadow", "outline"], "correct": "box-shadow"}
    ]
  }
}


{
  "lesson12": {
    "title": "JavaScript Advanced",
    "quiz": [
      {"id": 1, "question": "Which keyword declares a constant?", "options": ["var", "let", "const", "static"], "correct": "const"},
      {"id": 2, "question": "Which method converts JSON to object?", "options": ["JSON.stringify()", "JSON.parse()", "toObject()", "parseJSON()"], "correct": "JSON.parse()"},
      {"id": 3, "question": "Which operator checks both value & type?", "options": ["==", "===", "=", "!="], "correct": "==="},
      {"id": 4, "question": "Which array method adds element at end?", "options": ["push()", "pop()", "shift()", "unshift()"], "correct": "push()"},
      {"id": 5, "question": "Arrow functions were introduced in?", "options": ["ES5", "ES6", "ES7", "ES8"], "correct": "ES6"},
      {"id": 6, "question": "Which keyword handles errors?", "options": ["if", "catch", "throw", "try-catch"], "correct": "try-catch"},
      {"id": 7, "question": "Which method filters array?", "options": ["map()", "filter()", "reduce()", "find()"], "correct": "filter()"},
      {"id": 8, "question": "Which function delays execution?", "options": ["setInterval()", "setTimeout()", "delay()", "sleep()"], "correct": "setTimeout()"},
      {"id": 9, "question": "typeof null is?", "options": ["null", "object", "undefined", "boolean"], "correct": "object"},
      {"id": 10, "question": "Which scope is block-scoped?", "options": ["var", "let", "function", "global"], "correct": "let"}
    ]
  }
}


{
  "lesson13": {
    "title": "React Basics",
    "quiz": [
      {"id": 1, "question": "React was developed by?", "options": ["Google", "Facebook", "Microsoft", "Amazon"], "correct": "Facebook"},
      {"id": 2, "question": "JSX stands for?", "options": ["JavaScript XML", "Java Syntax Extension", "JSON XML", "Java Standard"], "correct": "JavaScript XML"},
      {"id": 3, "question": "Which hook is for state?", "options": ["useEffect", "useState", "useReducer", "useContext"], "correct": "useState"},
      {"id": 4, "question": "React components return?", "options": ["HTML", "JSX", "CSS", "JSON"], "correct": "JSX"},
      {"id": 5, "question": "Which command creates React app?", "options": ["npx create-react-app", "npm start react", "react new", "yarn react"], "correct": "npx create-react-app"},
      {"id": 6, "question": "Props are?", "options": ["Mutable", "Immutable", "Variables", "Functions"], "correct": "Immutable"},
      {"id": 7, "question": "Which renders UI?", "options": ["render()", "print()", "display()", "show()"], "correct": "render()"},
      {"id": 8, "question": "useEffect is used for?", "options": ["Styling", "Side Effects", "Props", "State"], "correct": "Side Effects"},
      {"id": 9, "question": "Which method updates state in class components?", "options": ["updateState()", "this.setState()", "change()", "modify()"], "correct": "this.setState()"},
      {"id": 10, "question": "React is?", "options": ["Framework", "Library", "Language", "Compiler"], "correct": "Library"}
    ]
  }
}


{
  "lesson14": {
    "title": "React State & Props",
    "quiz": [
      {"id": 1, "question": "State in React is?", "options": ["Immutable", "Mutable", "Static", "External"], "correct": "Mutable"},
      {"id": 2, "question": "Props are passed from?", "options": ["Child to Parent", "Parent to Child", "Anywhere", "Global"], "correct": "Parent to Child"},
      {"id": 3, "question": "Which hook manages state?", "options": ["useState", "useEffect", "useContext", "useReducer"], "correct": "useState"},
      {"id": 4, "question": "Props are?", "options": ["Arguments", "Variables", "Functions", "Objects"], "correct": "Arguments"},
      {"id": 5, "question": "Which is used for default props?", "options": ["setProps", "defaultProps", "initProps", "startProps"], "correct": "defaultProps"},
      {"id": 6, "question": "Props cannot be?", "options": ["Changed", "Read", "Passed", "Accessed"], "correct": "Changed"},
      {"id": 7, "question": "State updates cause?", "options": ["Nothing", "Re-render", "New Component", "Crash"], "correct": "Re-render"},
      {"id": 8, "question": "Which type are props?", "options": ["Read-only", "Writable", "Mutable", "Static"], "correct": "Read-only"},
      {"id": 9, "question": "Props drilling means?", "options": ["Deep passing props", "Deleting props", "Updating state", "Sharing hooks"], "correct": "Deep passing props"},
      {"id": 10, "question": "Best way to avoid prop drilling?", "options": ["useEffect", "useContext", "useState", "useReducer"], "correct": "useContext"}
    ]
  }
}


{
  "lesson15": {
    "title": "React Hooks",
    "quiz": [
      {"id": 1, "question": "Hooks were introduced in?", "options": ["React 14", "React 15", "React 16.8", "React 17"], "correct": "React 16.8"},
      {"id": 2, "question": "Which hook handles side effects?", "options": ["useEffect", "useState", "useReducer", "useMemo"], "correct": "useEffect"},
      {"id": 3, "question": "Which hook for state?", "options": ["useState", "useRef", "useMemo", "useCallback"], "correct": "useState"},
      {"id": 4, "question": "Which hook stores mutable ref?", "options": ["useMemo", "useRef", "useEffect", "useContext"], "correct": "useRef"},
      {"id": 5, "question": "Which hook memoizes value?", "options": ["useMemo", "useEffect", "useCallback", "useState"], "correct": "useMemo"},
      {"id": 6, "question": "Which hook memoizes functions?", "options": ["useState", "useCallback", "useEffect", "useMemo"], "correct": "useCallback"},
      {"id": 7, "question": "Which hook shares data globally?", "options": ["useEffect", "useReducer", "useContext", "useState"], "correct": "useContext"},
      {"id": 8, "question": "useReducer is alternative to?", "options": ["useState", "useEffect", "useRef", "useMemo"], "correct": "useState"},
      {"id": 9, "question": "Custom hooks are?", "options": ["Functions", "Classes", "Props", "Variables"], "correct": "Functions"},
      {"id": 10, "question": "Hooks can be used in?", "options": ["Class components", "Functional components", "Both", "None"], "correct": "Functional components"}
    ]
  }
}


{
  "lesson16": {
    "title": "TypeScript Basics",
    "quiz": [
      {"id": 1, "question": "TypeScript is developed by?", "options": ["Facebook", "Google", "Microsoft", "Amazon"], "correct": "Microsoft"},
      {"id": 2, "question": "File extension for TypeScript?", "options": [".js", ".ts", ".tsx", "Both .ts & .tsx"], "correct": "Both .ts & .tsx"},
      {"id": 3, "question": "TypeScript is a superset of?", "options": ["Python", "C++", "JavaScript", "Java"], "correct": "JavaScript"},
      {"id": 4, "question": "Which keyword defines type?", "options": ["type", "interface", "var", "struct"], "correct": "type"},
      {"id": 5, "question": "Which supports OOP in TS?", "options": ["Class", "Struct", "Module", "Namespace"], "correct": "Class"},
      {"id": 6, "question": "Which type means any value?", "options": ["unknown", "any", "void", "never"], "correct": "any"},
      {"id": 7, "question": "Which type means no value?", "options": ["null", "undefined", "void", "never"], "correct": "void"},
      {"id": 8, "question": "Which utility makes properties optional?", "options": ["Partial", "Readonly", "Pick", "Record"], "correct": "Partial"},
      {"id": 9, "question": "Which keyword is used for inheritance?", "options": ["extends", "inherits", "super", "base"], "correct": "extends"},
      {"id": 10, "question": "Which type never returns?", "options": ["never", "void", "null", "undefined"], "correct": "never"}
    ]
  }
}


{
  "lesson17": {
    "title": "Node.js Basics",
    "quiz": [
      {"id": 1, "question": "Node.js is built on?", "options": ["V8 Engine", "Java VM", ".NET", "PHP"], "correct": "V8 Engine"},
      {"id": 2, "question": "Which module handles file system?", "options": ["fs", "http", "path", "os"], "correct": "fs"},
      {"id": 3, "question": "Which module creates server?", "options": ["http", "url", "net", "dns"], "correct": "http"},
      {"id": 4, "question": "npm stands for?", "options": ["Node Project Manager", "Node Package Manager", "Network Package Manager", "None"], "correct": "Node Package Manager"},
      {"id": 5, "question": "Which command initializes npm?", "options": ["npm start", "npm init", "npm install", "npm run"], "correct": "npm init"},
      {"id": 6, "question": "Which keyword imports modules?", "options": ["require", "import", "include", "load"], "correct": "require"},
      {"id": 7, "question": "Which keyword exports modules?", "options": ["exports", "output", "module", "send"], "correct": "exports"},
      {"id": 8, "question": "Which method reads a file?", "options": ["fs.read()", "fs.readFile()", "fs.getFile()", "file.read()"], "correct": "fs.readFile()"},
      {"id": 9, "question": "Which function runs async code?", "options": ["setTimeout()", "delay()", "async()", "await()"], "correct": "setTimeout()"},
      {"id": 10, "question": "Which file defines dependencies?", "options": ["package.json", "index.js", "server.js", "config.json"], "correct": "package.json"}
    ]
  }
}


{
  "lesson18": {
    "title": "Express.js & APIs",
    "quiz": [
      {"id": 1, "question": "Express.js is a?", "options": ["Framework", "Library", "Language", "Compiler"], "correct": "Framework"},
      {"id": 2, "question": "Which command installs Express?", "options": ["npm install express", "npm add express", "yarn express", "node install express"], "correct": "npm install express"},
      {"id": 3, "question": "Which method handles GET?", "options": ["app.get()", "app.post()", "app.use()", "app.fetch()"], "correct": "app.get()"},
      {"id": 4, "question": "Which method handles POST?", "options": ["app.get()", "app.post()", "app.put()", "app.send()"], "correct": "app.post()"},
      {"id": 5, "question": "Middleware is used for?", "options": ["Routing", "Handling requests", "Error handling", "All"], "correct": "All"},
      {"id": 6, "question": "Which method starts server?", "options": ["app.run()", "app.listen()", "app.start()", "app.begin()"], "correct": "app.listen()"},
      {"id": 7, "question": "Which package allows CORS?", "options": ["cors", "axios", "helmet", "express-cors"], "correct": "cors"},
      {"id": 8, "question": "Which module makes HTTP requests?", "options": ["axios", "fetch", "request", "All"], "correct": "All"},
      {"id": 9, "question": "Which status code is success?", "options": ["200", "201", "204", "All"], "correct": "All"},
      {"id": 10, "question": "Which method updates data?", "options": ["PUT", "PATCH", "Both", "None"], "correct": "Both"}
    ]
  }
}


{
  "lesson19": {
    "title": "Authentication & JWT",
    "quiz": [
      {"id": 1, "question": "JWT stands for?", "options": ["Java Web Token", "JSON Web Token", "JavaScript Web Type", "JSON With Token"], "correct": "JSON Web Token"},
      {"id": 2, "question": "Which algorithm signs JWT?", "options": ["RSA", "HMAC", "Both", "None"], "correct": "Both"},
      {"id": 3, "question": "JWT has how many parts?", "options": ["2", "3", "4", "5"], "correct": "3"},
      {"id": 4, "question": "First part of JWT is?", "options": ["Header", "Payload", "Signature", "Token"], "correct": "Header"},
      {"id": 5, "question": "Second part of JWT is?", "options": ["Payload", "Header", "Signature", "Body"], "correct": "Payload"},
      {"id": 6, "question": "Third part of JWT is?", "options": ["Signature", "Payload", "Header", "Footer"], "correct": "Signature"},
      {"id": 7, "question": "Which header stores JWT?", "options": ["Auth", "Authorization", "Token", "Access"], "correct": "Authorization"},
      {"id": 8, "question": "Which HTTP code is unauthorized?", "options": ["401", "403", "404", "500"], "correct": "401"},
      {"id": 9, "question": "Which package generates JWT?", "options": ["jsonwebtoken", "jwt", "tokenizer", "auth"], "correct": "jsonwebtoken"},
      {"id": 10, "question": "Which is safer?", "options": ["Session", "JWT", "Cookies", "Password"], "correct": "JWT"}
    ]
  }
}


{
  "lesson20": {
    "title": "Deployment & Hosting",
    "quiz": [
      {"id": 1, "question": "Which service is for static hosting?", "options": ["Firebase Hosting", "MongoDB", "MySQL", "React"], "correct": "Firebase Hosting"},
      {"id": 2, "question": "Which command deploys Firebase?", "options": ["firebase deploy", "firebase start", "firebase init", "firebase push"], "correct": "firebase deploy"},
      {"id": 3, "question": "Which platform hosts React apps?", "options": ["Vercel", "Netlify", "Firebase", "All"], "correct": "All"},
      {"id": 4, "question": "Which file defines Firebase config?", "options": ["firebase.json", "config.js", "setup.json", "deploy.json"], "correct": "firebase.json"},
      {"id": 5, "question": "Which service offers free SSL?", "options": ["Vercel", "Netlify", "Firebase", "All"], "correct": "All"},
      {"id": 6, "question": "Which command builds React app?", "options": ["npm run build", "npm start", "npm dev", "npm react"], "correct": "npm run build"},
      {"id": 7, "question": "Which is NOT a cloud provider?", "options": ["AWS", "GCP", "Azure", "HTML"], "correct": "HTML"},
      {"id": 8, "question": "CI/CD stands for?", "options": ["Continuous Integration/Continuous Deployment", "Code Integration/Code Delivery", "Central Install/Cloud Deploy", "None"], "correct": "Continuous Integration/Continuous Deployment"},
      {"id": 9, "question": "Which Firebase command initializes?", "options": ["firebase init", "firebase deploy", "firebase start", "firebase config"], "correct": "firebase init"},
      {"id": 10, "question": "Which is a containerization tool?", "options": ["Docker", "Kubernetes", "Both", "None"], "correct": "Both"}
    ]
  }
}
